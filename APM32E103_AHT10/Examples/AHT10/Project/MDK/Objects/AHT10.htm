<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\AHT10.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\AHT10.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Dec 09 00:31:57 2022
<BR><P>
<H3>Maximum Stack Usage =        168 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; AHT10_Data &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from apm32e10x_int.o(i.BusFault_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[48]">CAN2_RX1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[49]">CAN2_SCE_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from apm32e10x_int.o(i.DebugMon_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[10]">EINT0_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[32]">EINT15_10_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[11]">EINT1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[12]">EINT2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[13]">EINT3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[14]">EINT4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[21]">EINT9_5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3a]">EMMC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from apm32e10x_int.o(i.HardFault_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from apm32e10x_int.o(i.MemManage_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from apm32e10x_int.o(i.NMI_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from apm32e10x_int.o(i.PendSV_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[f]">RCM_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from apm32e10x_int.o(i.SVC_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from apm32e10x_int.o(i.SysTick_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4b]">SystemInit</a> from system_apm32e10x.o(i.SystemInit) referenced from startup_apm32e10x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[25]">TMR1_CC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_COM_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[23]">TMR1_UP_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[26]">TMR2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[27]">TMR3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[28]">TMR4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3c]">TMR5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[40]">TMR6_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[41]">TMR7_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[35]">TMR8_BRK_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[38]">TMR8_CC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[37]">TMR8_TRG_COM_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[36]">TMR8_UP_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1d]">USBD1_HP_CAN1_TX_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1e]">USBD1_LP_CAN1_RX0_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[46]">USBD2_HP_CAN2_TX_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[47]">USBD2_LP_CAN2_RX0_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[34]">USBDWakeUp_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from apm32e10x_int.o(i.UsageFault_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_apm32e10x_hd.o(.text)
 <LI><a href="#[4d]">fputc</a> from usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[4a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(.text)
</UL>
<P><STRONG><a name="[88]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[89]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[8c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[8d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EINT15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EMMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TMR5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TMR6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TMR7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TMR8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TMR8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USBD1_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USBD1_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USBD2_HP_CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>USBD2_LP_CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBDWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[8f]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[90]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[53]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[92]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[93]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>AHT10_Data</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, aht10.o(i.AHT10_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = AHT10_Data &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>AHT10_Init</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, aht10.o(i.AHT10_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AHT10_Init &rArr; AHT10_Read_CalEnable &rArr; AHT10_ReadStatus &rArr; IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Reset
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Read_CalEnable
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>AHT10_ReadData</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, aht10.o(i.AHT10_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AHT10_ReadData &rArr; IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[69]"></a>AHT10_ReadStatus</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, aht10.o(i.AHT10_ReadStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AHT10_ReadStatus &rArr; IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Read_CalEnable
</UL>

<P><STRONG><a name="[68]"></a>AHT10_Read_CalEnable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, aht10.o(i.AHT10_Read_CalEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AHT10_Read_CalEnable &rArr; AHT10_ReadStatus &rArr; IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
</UL>

<P><STRONG><a name="[67]"></a>AHT10_Reset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, aht10.o(i.AHT10_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AHT10_Reset &rArr; IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_int.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_int.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>GPIO_Config</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, apm32e10x_gpio.o(i.GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[71]"></a>GPIO_ReadInputBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apm32e10x_gpio.o(i.GPIO_ReadInputBit))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[6f]"></a>GPIO_ResetBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_gpio.o(i.GPIO_ResetBit))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[6d]"></a>GPIO_SetBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_gpio.o(i.GPIO_SetBit))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[73]"></a>GPIO_WriteBitValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apm32e10x_gpio.o(i.GPIO_WriteBitValue))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_int.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>IIC_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, iic.o(i.IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IIC_Init &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>IIC_Read_Byte</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, iic.o(i.IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IIC_Read_Byte &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadStatus
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[62]"></a>IIC_Send_Byte</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, iic.o(i.IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IIC_Send_Byte &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBitValue
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[61]"></a>IIC_Start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, iic.o(i.IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIC_Start &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[65]"></a>IIC_Stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, iic.o(i.IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[63]"></a>IIC_Wait_Ack</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, iic.o(i.IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop &rArr; SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputBit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadStatus
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_ReadData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_int.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_int.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_int.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>RCM_EnableAPB2PeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32e10x_rcm.o(i.RCM_EnableAPB2PeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[74]"></a>RCM_ReadHCLKFreq</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, apm32e10x_rcm.o(i.RCM_ReadHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCM_ReadHCLKFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>

<P><STRONG><a name="[76]"></a>RCM_ReadPCLKFreq</STRONG> (Thumb, 62 bytes, Stack size 28 bytes, apm32e10x_rcm.o(i.RCM_ReadPCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RCM_ReadPCLKFreq &rArr; RCM_ReadHCLKFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[75]"></a>RCM_ReadSYSCLKFreq</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, apm32e10x_rcm.o(i.RCM_ReadSYSCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadHCLKFreq
</UL>

<P><STRONG><a name="[6e]"></a>SDA_IN</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, iic.o(i.SDA_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SDA_IN &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[72]"></a>SDA_OUT</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, iic.o(i.SDA_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SDA_OUT &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_int.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>SysTick_ConfigCLKSource</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, apm32e10x_misc.o(i.SysTick_ConfigCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_int.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, system_apm32e10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SystemClockConfig &rArr; SystemClock72M
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>USART_Config</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, apm32e10x_usart.o(i.USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART_Config &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadHCLKFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[7b]"></a>USART_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apm32e10x_usart.o(i.USART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[7a]"></a>USART_Init</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USART_Init &rArr; USART_Config &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadHCLKFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>USART_ReadStatusFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32e10x_usart.o(i.USART_ReadStatusFlag))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[85]"></a>USART_TxData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apm32e10x_usart.o(i.USART_TxData))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_int.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[94]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[87]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[96]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[97]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[98]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[99]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[83]"></a>delay_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, delay.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ConfigCLKSource
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>delay_ms</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>delay_us</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[4d]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxData
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadStatusFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[4a]"></a>main</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = main &rArr; AHT10_Data &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHT10_Data
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[78]"></a>SystemClock72M</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, system_apm32e10x.o(i.SystemClock72M))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemClock72M
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>

<P><STRONG><a name="[77]"></a>SystemClockConfig</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_apm32e10x.o(i.SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemClockConfig &rArr; SystemClock72M
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock72M
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7e]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7d]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[81]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[80]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
